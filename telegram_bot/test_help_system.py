#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–æ–º–æ—â–∏
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from utils.help_system import HelpSystem

def test_help_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–º–æ—â–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–º–æ—â–∏...")
    
    help_system = HelpSystem()
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    print("\nüìã –í—Å–µ —Ä–∞–∑–¥–µ–ª—ã –ø–æ–º–æ—â–∏:")
    sections = help_system.get_all_sections()
    for section in sections:
        print(f"‚Ä¢ {section}")
    
    # –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–º–æ—â–∏
    print("\nüìñ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–º–æ—â–∏:")
    main_help = help_system.get_main_help()
    print(main_help[:300] + "..." if len(main_help) > 300 else main_help)
    
    # –¢–µ—Å—Ç –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤:")
    test_sections = ['commands', 'setup', 'faq', 'bug_report', 'features', 'troubleshooting']
    
    for section in test_sections:
        print(f"\n--- {section.upper()} ---")
        help_section = help_system.get_help_section(section)
        print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {help_section['title']}")
        content_preview = help_section['content'][:100] + "..." if len(help_section['content']) > 100 else help_section['content']
        print(f"–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {content_preview}")
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞:")
    search_queries = ['–∫–æ–º–∞–Ω–¥—ã', '–æ—à–∏–±–∫–∞', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞', '–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥']
    
    for query in search_queries:
        print(f"\n–ü–æ–∏—Å–∫: '{query}'")
        results = help_system.search_help(query)
        if results:
            for result in results:
                print(f"‚Ä¢ {result['title']}")
        else:
            print("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –¢–µ—Å—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
    print("\n‚ùå –¢–µ—Å—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–∞–∑–¥–µ–ª–∞:")
    non_existent = help_system.get_help_section('non_existent')
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {non_existent['title']}")

def test_help_content_length():
    """–¢–µ—Å—Ç –¥–ª–∏–Ω—ã —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ä–∞–∑–¥–µ–ª–æ–≤"""
    print("\nüìè –¢–µ—Å—Ç –¥–ª–∏–Ω—ã —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:")
    
    help_system = HelpSystem()
    sections = help_system.get_all_sections()
    
    for section in sections:
        help_section = help_system.get_help_section(section)
        content_length = len(help_section['content'])
        print(f"{section}: {content_length} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if content_length > 4000:
            print(f"‚ö†Ô∏è  –†–∞–∑–¥–µ–ª {section} —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –¥–ª—è Telegram!")
        elif content_length < 100:
            print(f"‚ö†Ô∏è  –†–∞–∑–¥–µ–ª {section} —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π!")

def test_markdown_safety():
    """–¢–µ—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Markdown"""
    print("\nüõ°Ô∏è –¢–µ—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Markdown:")
    
    help_system = HelpSystem()
    sections = help_system.get_all_sections()
    
    problematic_chars = ['**', '__', '```', '`']
    
    for section in sections:
        help_section = help_system.get_help_section(section)
        content = help_section['content']
        
        print(f"\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–¥–µ–ª–∞: {section}")
        for char in problematic_chars:
            if char in content:
                print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω –ø—Ä–æ–±–ª–µ–º–Ω—ã–π —Å–∏–º–≤–æ–ª: {char}")
            else:
                print(f"‚úÖ –°–∏–º–≤–æ–ª {char} –Ω–µ –Ω–∞–π–¥–µ–Ω")

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–º–æ—â–∏...\n")
    
    try:
        test_help_system()
        test_help_content_length()
        test_markdown_safety()
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ø–æ–º–æ—â–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üìù –°–∏—Å—Ç–µ–º–∞ –ø–æ–º–æ—â–∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc() 