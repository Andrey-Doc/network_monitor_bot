#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from telegram_bot.utils.settings_manager import SettingsManager
import json

def test_settings_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ SettingsManager"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫
    test_config_file = "test_settings.json"
    settings_manager = SettingsManager(test_config_file)
    
    try:
        # –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:")
        default_settings = settings_manager.settings
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {len(default_settings)} —Ä–∞–∑–¥–µ–ª–æ–≤")
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
        monitor_interval = settings_manager.get_setting('monitoring.interval')
        print(f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {monitor_interval} —Å–µ–∫")
        
        router_ips = settings_manager.get_setting('routers.ips')
        print(f"‚úÖ IP —Ä–æ—É—Ç–µ—Ä–æ–≤: {router_ips}")
        
        # –¢–µ—Å—Ç 3: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
        new_interval = 600
        if settings_manager.update_monitoring_interval(new_interval):
            print(f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {new_interval} —Å–µ–∫")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        updated_interval = settings_manager.get_setting('monitoring.interval')
        if updated_interval == new_interval:
            print(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ: –∏–Ω—Ç–µ—Ä–≤–∞–ª = {updated_interval} —Å–µ–∫")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –æ–∂–∏–¥–∞–ª–æ—Å—å {new_interval}, –ø–æ–ª—É—á–µ–Ω–æ {updated_interval}")
            
        # –¢–µ—Å—Ç 4: –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è:")
        if settings_manager.toggle_monitoring(False):
            print("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—ã–∫–ª—é—á–µ–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
            
        if settings_manager.toggle_notifications(True):
            print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
            
        # –¢–µ—Å—Ç 5: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤:")
        new_router_ips = ['192.168.1.1', '192.168.1.2', '192.168.1.3']
        if settings_manager.update_router_ips(new_router_ips):
            print(f"‚úÖ IP —Ä–æ—É—Ç–µ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {new_router_ips}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è IP —Ä–æ—É—Ç–µ—Ä–æ–≤")
            
        new_ports = [22, 80, 443, 8080]
        if settings_manager.update_scan_ports(new_ports):
            print(f"‚úÖ –ü–æ—Ä—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {new_ports}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç–æ–≤")
            
        # –¢–µ—Å—Ç 6: –°–≤–æ–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        print("\n6Ô∏è‚É£ –¢–µ—Å—Ç —Å–≤–æ–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
        summary = settings_manager.get_settings_summary()
        print("‚úÖ –°–≤–æ–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
        print(summary)
        
        # –¢–µ—Å—Ç 7: –≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
        print("\n7Ô∏è‚É£ –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
        settings_json = settings_manager.export_settings()
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã ({len(settings_json)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –¢–µ—Å—Ç 8: –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
        print("\n8Ô∏è‚É£ –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
        test_import_settings = {
            'monitoring': {
                'interval': 120,
                'enabled': True
            },
            'notifications': {
                'enabled': False
            }
        }
        
        if settings_manager.import_settings(json.dumps(test_import_settings)):
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            imported_interval = settings_manager.get_setting('monitoring.interval')
            imported_notifications = settings_manager.get_setting('notifications.enabled')
            
            print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {imported_interval} —Å–µ–∫")
            print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {'–≤–∫–ª—é—á–µ–Ω—ã' if imported_notifications else '–≤—ã–∫–ª—é—á–µ–Ω—ã'}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
            
        # –¢–µ—Å—Ç 9: –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
        print("\n9Ô∏è‚É£ –¢–µ—Å—Ç —Å–±—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
        if settings_manager.reset_to_defaults():
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±—Ä–æ—Å
            reset_interval = settings_manager.get_setting('monitoring.interval')
            if reset_interval == 300:  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                print(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞: –∏–Ω—Ç–µ—Ä–≤–∞–ª = {reset_interval} —Å–µ–∫")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞: –æ–∂–∏–¥–∞–ª–æ—Å—å 300, –ø–æ–ª—É—á–µ–Ω–æ {reset_interval}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
            
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        
    finally:
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        if os.path.exists(test_config_file):
            os.remove(test_config_file)
            print(f"\nüßπ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª {test_config_file} —É–¥–∞–ª—ë–Ω")

def test_settings_validation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    test_config_file = "test_validation.json"
    settings_manager = SettingsManager(test_config_file)
    
    try:
        # –¢–µ—Å—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π:")
        
        # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
        if settings_manager.update_monitoring_interval(-100):
            print("‚ùå –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ –¥–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞")
        else:
            print("‚úÖ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω")
            
        # –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ IP
        if settings_manager.update_router_ips([]):
            print("‚ùå –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ IP")
        else:
            print("‚úÖ –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ IP –æ—Ç–∫–ª–æ–Ω—ë–Ω")
            
        # –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–æ—Ä—Ç—ã
        invalid_ports = [70000, -1, 0]  # –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –ø–æ—Ä—Ç–æ–≤
        if settings_manager.update_scan_ports(invalid_ports):
            print("‚ùå –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ –¥–ª—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤")
        else:
            print("‚úÖ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–æ—Ä—Ç—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã")
            
        print("\n‚úÖ –¢–µ—Å—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
        
    finally:
        if os.path.exists(test_config_file):
            os.remove(test_config_file)

def test_settings_persistence():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print("\nüíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    test_config_file = "test_persistence.json"
    
    try:
        # –°–æ–∑–¥–∞—ë–º –ø–µ—Ä–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        settings_manager1 = SettingsManager(test_config_file)
        settings_manager1.update_monitoring_interval(900)
        settings_manager1.toggle_monitoring(True)
        
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–µ—Ä–≤–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ")
        
        # –°–æ–∑–¥–∞—ë–º –≤—Ç–æ—Ä–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        settings_manager2 = SettingsManager(test_config_file)
        interval = settings_manager2.get_setting('monitoring.interval')
        monitoring_enabled = settings_manager2.get_setting('monitoring.enabled')
        
        if interval == 900 and monitoring_enabled:
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤–æ –≤—Ç–æ—Ä–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: –∏–Ω—Ç–µ—Ä–≤–∞–ª={interval}, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥={monitoring_enabled}")
            
        print("\n‚úÖ –¢–µ—Å—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        
    finally:
        if os.path.exists(test_config_file):
            os.remove(test_config_file)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    print("=" * 50)
    
    test_settings_manager()
    test_settings_validation()
    test_settings_persistence()
    
    print("\n" + "=" * 50)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!") 